package cz.itstep.practice4.task3.storage;

import cz.itstep.practice4.task3.model.Person;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.util.Collections;

class SerializationUtilsTest {

    @Test
    void serialize_shouldPass() {
        var EXPECTED_SERIALIZED = new byte[]{-84, -19, 0, 5, 115, 114, 0, 38, 99, 122, 46, 105, 116, 115, 116, 101, 112, 46, 112, 114, 97, 99, 116, 105, 99, 101, 52, 46, 116, 97, 115, 107, 51, 46, 109, 111, 100, 101, 108, 46, 80, 101, 114, 115, 111, 110, -76, 0, -91, 79, 97, -70, -114, 65, 2, 0, 2, 76, 0, 2, 105, 100, 116, 0, 16, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 76, 111, 110, 103, 59, 76, 0, 10, 112, 101, 110, 97, 108, 116, 121, 73, 100, 115, 116, 0, 16, 76, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 76, 105, 115, 116, 59, 120, 112, 115, 114, 0, 14, 106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 76, 111, 110, 103, 59, -117, -28, -112, -52, -113, 35, -33, 2, 0, 1, 74, 0, 5, 118, 97, 108, 117, 101, 120, 114, 0, 16, 106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 78, 117, 109, 98, 101, 114, -122, -84, -107, 29, 11, -108, -32, -117, 2, 0, 0, 120, 112, 0, 0, 0, 0, 0, 0, 0, 1, 115, 114, 0, 19, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 65, 114, 114, 97, 121, 76, 105, 115, 116, 120, -127, -46, 29, -103, -57, 97, -99, 3, 0, 1, 73, 0, 4, 115, 105, 122, 101, 120, 112, 0, 0, 0, 0, 119, 4, 0, 0, 0, 0, 120};

        var result = SerializationUtils.serializeEntity(new Person(1L));

        Assertions.assertArrayEquals(EXPECTED_SERIALIZED, result);
    }


    @Test
    void deserialize_shouldPass() {
        var SERIALIZED_ENTITY = new byte[]{-84, -19, 0, 5, 115, 114, 0, 38, 99, 122, 46, 105, 116, 115, 116, 101, 112, 46, 112, 114, 97, 99, 116, 105, 99, 101, 52, 46, 116, 97, 115, 107, 51, 46, 109, 111, 100, 101, 108, 46, 80, 101, 114, 115, 111, 110, -76, 0, -91, 79, 97, -70, -114, 65, 2, 0, 2, 76, 0, 2, 105, 100, 116, 0, 16, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 76, 111, 110, 103, 59, 76, 0, 10, 112, 101, 110, 97, 108, 116, 121, 73, 100, 115, 116, 0, 16, 76, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 76, 105, 115, 116, 59, 120, 112, 115, 114, 0, 14, 106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 76, 111, 110, 103, 59, -117, -28, -112, -52, -113, 35, -33, 2, 0, 1, 74, 0, 5, 118, 97, 108, 117, 101, 120, 114, 0, 16, 106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 78, 117, 109, 98, 101, 114, -122, -84, -107, 29, 11, -108, -32, -117, 2, 0, 0, 120, 112, 0, 0, 0, 0, 0, 0, 0, 1, 115, 114, 0, 19, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 65, 114, 114, 97, 121, 76, 105, 115, 116, 120, -127, -46, 29, -103, -57, 97, -99, 3, 0, 1, 73, 0, 4, 115, 105, 122, 101, 120, 112, 0, 0, 0, 0, 119, 4, 0, 0, 0, 0, 120};

        Person person = SerializationUtils.deserializeEntity(SERIALIZED_ENTITY);

        Assertions.assertNotNull(person);
        Assertions.assertEquals(1L, person.getId());
        Assertions.assertIterableEquals(Collections.emptyList(), person.getPenaltyIds());
    }
}
